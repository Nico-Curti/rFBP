<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="magnetization__oldgcc_8h" kind="file" language="C++">
    <compoundname>magnetization_oldgcc.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">cmath</includes>
    <includes local="no">string</includes>
    <includes local="no">algorithm</includes>
    <includes refid="magP_8h" local="no">magP.h</includes>
    <includes refid="magT_8h" local="no">magT.h</includes>
    <includedby refid="magnetization_8h" local="no">/home/nico/Code/rFBP/include/magnetization.h</includedby>
    <incdepgraph>
      <node id="14">
        <label>spline.h</label>
        <link refid="spline_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>iterator</label>
      </node>
      <node id="4">
        <label>cmath</label>
      </node>
      <node id="12">
        <label>numeric</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="1">
        <label>/home/nico/Code/rFBP/include/magnetization_oldgcc.h</label>
        <link refid="magnetization__oldgcc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>fstream</label>
      </node>
      <node id="13">
        <label>utils.hpp</label>
      </node>
      <node id="8">
        <label>magT.h</label>
        <link refid="magT_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>magP.h</label>
        <link refid="magP_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>array</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>type_traits</label>
      </node>
      <node id="6">
        <label>algorithm</label>
      </node>
      <node id="9">
        <label>atanherf.h</label>
        <link refid="atanherf_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/nico/Code/rFBP/include/magnetization.h</label>
        <link refid="magnetization_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/nico/Code/rFBP/include/params.h</label>
        <link refid="params_8h"/>
      </node>
      <node id="1">
        <label>/home/nico/Code/rFBP/include/magnetization_oldgcc.h</label>
        <link refid="magnetization__oldgcc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/nico/Code/rFBP/include/cavity_message.h</label>
        <link refid="cavity__message_8h"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacestd">std</innernamespace>
    <innernamespace refid="namespacemag">mag</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__mag_old_h__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__mag_old_h__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">std</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacemag_1a4cd09de8217de3fffa7c162799d3a7ab" kindref="member">clamp</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>low,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>high);</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forward<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structMagP64" kindref="compound">MagP64</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structMagT64" kindref="compound">MagT64</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="namespacemag" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemag" kindref="compound">mag</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacemag_1a4cd09de8217de3fffa7c162799d3a7ab" kindref="member">clamp</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>low,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>high);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacemag_1aa54bdc35a222cc01654b22f07b62fbf2" kindref="member">lr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemag_1a63ad70f0f7d3d359885510751793278e" kindref="member">sign0</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a01012f2c4f6c63f50117d1a80cbc663a" kindref="member">isinf</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a01012f2c4f6c63f50117d1a80cbc663a" kindref="member">isinf</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1aa5c6ba535495d360f9262dec5cdc3e8a" kindref="member">signbit</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>m);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1aa5c6ba535495d360f9262dec5cdc3e8a" kindref="member">signbit</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>m);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>template<sp/>&lt;<sp/>class<sp/>Mag,<sp/>typename<sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/>nullptr<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/>f2m<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>double<sp/>&amp;<sp/>x);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>template<sp/>&lt;<sp/>class<sp/>Mag,<sp/>typename<sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/>nullptr<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/>f2m<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>double<sp/>&amp;<sp/>x);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a885c63525229459a6f87679101369f94" kindref="member">zeros</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Mag<sp/>*<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>n);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a885c63525229459a6f87679101369f94" kindref="member">zeros</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Mag<sp/>*<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>n);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a2503c41bf09106f862ddd2002661a1d1" kindref="member">zero</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Mag<sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a2503c41bf09106f862ddd2002661a1d1" kindref="member">zero</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Mag<sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacemag_1a58cc14c100de3aa5fb1f06334f803002" kindref="member">abs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>a);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacemag_1a58cc14c100de3aa5fb1f06334f803002" kindref="member">abs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>a);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a7d51dc1d83c4252db159812967da295b" kindref="member">copysign</ref><sp/><sp/><sp/><sp/><sp/><sp/>(Mag<sp/>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>y);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a7d51dc1d83c4252db159812967da295b" kindref="member">copysign</ref><sp/><sp/><sp/><sp/><sp/><sp/>(Mag<sp/>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>y);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1aace55ba7fc39b03bfa2289c9f740f5cb" kindref="member">arrow</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1aace55ba7fc39b03bfa2289c9f740f5cb" kindref="member">arrow</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemag_1a63ad70f0f7d3d359885510751793278e" kindref="member">sign0</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemag_1a63ad70f0f7d3d359885510751793278e" kindref="member">sign0</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacemag_1a292f62f5334c5de22b315b503f15355a" kindref="member">logmag2p</ref><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacemag_1a292f62f5334c5de22b315b503f15355a" kindref="member">logmag2p</ref><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a36beb34e6d5ae3a3e7d3213aea16a9c9" kindref="member">convert</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a36beb34e6d5ae3a3e7d3213aea16a9c9" kindref="member">convert</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacemag_1a36beb34e6d5ae3a3e7d3213aea16a9c9" kindref="member">convert</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacemag_1a36beb34e6d5ae3a3e7d3213aea16a9c9" kindref="member">convert</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a8e27b9ea487021f76d9995c1f0b91087" kindref="member">couple</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x2);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a8e27b9ea487021f76d9995c1f0b91087" kindref="member">couple</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x2);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1af5ddde6274707bbd19f6d7c40d1c4c5d" kindref="member">damp</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>newx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>oldx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>l);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1af5ddde6274707bbd19f6d7c40d1c4c5d" kindref="member">damp</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>newx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>oldx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>l);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a7af2f84ac356634ab90aed8251e2b6ba" kindref="member">mtanh</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a7af2f84ac356634ab90aed8251e2b6ba" kindref="member">mtanh</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>template<sp/>&lt;<sp/>class<sp/>Mag,<sp/>typename<sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/>nullptr<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/>matanh<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>Mag<sp/>&amp;<sp/>m);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a1cc0338261fc2e50d8c15c3bf6912cfc" kindref="member">merf</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a1cc0338261fc2e50d8c15c3bf6912cfc" kindref="member">merf</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a68d0b86d6026b9efc23abee4835aab11" kindref="member">bar</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>m2);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a68d0b86d6026b9efc23abee4835aab11" kindref="member">bar</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>m2);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacemag_1a6118e8bfcf070d2e36ade569ed77084e" kindref="member">log1pxy</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>x,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>y);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacemag_1a6118e8bfcf070d2e36ade569ed77084e" kindref="member">log1pxy</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>x,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>y);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacemag_1a77afb49c9a89a50cf24647a71053cffe" kindref="member">mcrossentropy</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>x,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>y);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacemag_1a77afb49c9a89a50cf24647a71053cffe" kindref="member">mcrossentropy</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>x,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>y);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacemag_1a253e60a2a06d7dfd405b12ba75b8f25d" kindref="member">logZ</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>u0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>*<sp/>u,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>nu);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacemag_1a253e60a2a06d7dfd405b12ba75b8f25d" kindref="member">logZ</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>u0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>*<sp/>u,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>nu);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a5142fc182575fa48bc52b02e000e042c" kindref="member">auxmix</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>H,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>ap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>am);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1ad6b802dacc9663741e80ecab5129ad88" kindref="member">erfmix</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>H,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>mp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>mm);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1ad6b802dacc9663741e80ecab5129ad88" kindref="member">erfmix</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>H,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>mp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>mm);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagP64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a703c5ebd25527461f6bb98727b158f49" kindref="member">exactmix</ref><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>H,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>pp,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>pm);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>enable_if<sp/>&lt;<sp/>std<sp/>::<sp/>is_same<sp/>&lt;<sp/>Mag,<sp/>MagT64<sp/>&gt;<sp/>::<sp/>value<sp/>&gt;<sp/>::<sp/>type<sp/>*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>Mag<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemag_1a703c5ebd25527461f6bb98727b158f49" kindref="member">exactmix</ref><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>H,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>pp,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mag<sp/>&amp;<sp/>pm);</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="magP_8h" kindref="compound">magP.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="magT_8h" kindref="compound">magT.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__mag_old_h__</highlight></codeline>
    </programlisting>
    <location file="/home/nico/Code/rFBP/include/magnetization_oldgcc.h"/>
  </compounddef>
</doxygen>
